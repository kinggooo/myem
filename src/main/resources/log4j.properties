#定义LOG输出级别
log4j.rootLogger=INFO,Console,File
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
#log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n
#log4j.appender.CONSOLE.layout.ConversionPattern=%d [%t] %-5p %c(%L) - %m%n

##文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.File=org.apache.log4j.RollingFileAppender
##指定输出目录
#log4j.appender.File.File=logs/myem.log
##定义文件最大大小
#log4j.appender.File.MaxFileSize=10MB
## 输出所有日志，如果换成DEBUG表示输出DEBUG以上级别日志
#log4j.appender.File.Threshold=ALL
#log4j.appender.File.layout=org.apache.log4j.PatternLayout
#log4j.appender.File.layout.ConversionPattern=[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG
#log4j.logger.com.em.mapper=DEBUG



##定时第二个输出端，输出到文件,该文件最大空间为1000KB，超过1000KB后自动备份，生成新文件
#log4j.appender.Orclight=org.apache.log4j.RollingFileAppender
#log4j.appender.Orclight.file=orclight.log
#log4j.appender.Orclight.layout=org.apache.log4j.PatternLayout
#log4j.appender.Orclight.layout.conversionPattern=%d [%t] %-5p %c(%L) - %m%n
#log4j.appender.Orclight.MaxFileSize=1000KB
#log4j.appender.Orclight.MaxBackupIndex=10
#
##定义具体某个包下的日志输出级别
#log4j.logger.com.orclight.rbac=INFO,Orclight,CONSOLE
#log4j.logger.com.orclight.rbac.services.impl.CacheServiceImpl=INFO,Orclight
#log4j.logger.org.springframework=ERROR,Orclight
#
#log4j.logger.org.springframework.jdbc.support=INFO
#log4j.logger.org.springframework.scheduling=INFO
##定义sql语句的输出级别
#log4j.logger.java.sql.Connection=DEBUG
#
## Struts OgnlUtil issues unimportant warnings
#log4j.logger.com.opensymphony.xwork2.util.OgnlUtil=ERROR
#log4j.logger.com.opensymphony.xwork2.ognl.OgnlValueStack=ERROR